name: CI/CD pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    if: contains(github.event.head_commit.message, 'backend') || contains(github.event.head_commit.message, 'full')
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build Backend
        working-directory: ./Quiz-App-Backend

        run: |
          dotnet restore
          dotnet build --configuration Release


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build Backend Docker Image
        run: docker build -t $DOCKERHUB_USERNAME/backend:latest ./Quiz-App-Backend

      - name: Push Backend Docker Image
        run: docker push $DOCKERHUB_USERNAME/backend:latest
        
  frontend:
    if: contains(github.event.head_commit.message, 'frontend') || contains(github.event.head_commit.message, 'full')
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Angular
        working-directory: ./Quiz-App-Frontend
        run: |
          npm install
          npm run build --prod

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build Docker Image
        run: docker build -t $DOCKERHUB_USERNAME/frontend:latest ./Quiz-App-Frontend

      - name: Push Docker Image
        run: docker push $DOCKERHUB_USERNAME/frontend:latest




